import 'package:adhan/adhan.dart';
import 'package:flutter_local_notifications/flutter_local_notifications.dart';
import 'package:geolocator/geolocator.dart';
import 'package:timezone/data/latest_all.dart' as tz;
import 'package:timezone/timezone.dart' as tz;

class NotificationServices {
  static FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =
      FlutterLocalNotificationsPlugin();

  static Future init() async {
    AndroidInitializationSettings initializationSettingsAndroid =
        AndroidInitializationSettings('@mipmap/ic_launcher');
    final InitializationSettings initializationSettings =
        InitializationSettings(android: initializationSettingsAndroid);
    await flutterLocalNotificationsPlugin.initialize(initializationSettings);
  }
static List<String> morningazkarList = [
 "ุฃุตุจุญูุง ูุฃุตุจุญ ุงูููู ูููุ ูุงูุญูุฏ ูููุ ูุง ุฅูู ุฅูุง ุงููู ูุญุฏู ูุง ุดุฑูู ููุ ูู ุงูููู ููู ุงูุญูุฏ ููู ุนูู ูู ุดูุก ูุฏูุฑ ๐",
  "ุงูููู ุฅูู ุฃุณุฃูู ุฎูุฑ ูุฐุง ุงูููู: ูุชุญูุ ููุตุฑูุ ูููุฑูุ ูุจุฑูุชูุ ููุฏุงูุ ูุฃุนูุฐ ุจู ูู ุดุฑ ูุง ููู ูุดุฑ ูุง ุจุนุฏู ๐คฒ",
  "ุฃุตุจุญูุง ูุฃุตุจุญ ุงูููู ููู ุฑุจ ุงูุนุงููููุ ุงูููู ุฅูู ุฃุณุฃูู ุฎูุฑ ูุฐุง ุงูููู ูุชุญู ููุตุฑู ูููุฑู ูุจุฑูุชู ููุฏุงู โ๏ธ",
  "ุฑุถูุช ุจุงููู ุฑุจูุงุ ูุจุงูุฅุณูุงู ุฏูููุงุ ูุจูุญูุฏ ๏ทบ ูุจููุง ูุฑุณูููุง ๐",
  "ุงูููู ูุง ุฃุตุจุญ ุจู ูู ูุนูุฉ ุฃู ุจุฃุญุฏ ูู ุฎููู ูููู ูุญุฏู ูุง ุดุฑูู ููุ ููู ุงูุญูุฏ ููู ุงูุดูุฑ ๐ธ",
  "ุงูููู ุจู ุฃุตุจุญูุงุ ูุจู ุฃูุณููุงุ ูุจู ูุญูุงุ ูุจู ูููุชุ ูุฅููู ุงููุดูุฑ ๐",
  "ุญุณุจู ุงููู ูุง ุฅูู ุฅูุง ูู ุนููู ุชูููุช ููู ุฑุจ ุงูุนุฑุด ุงูุนุธูู (7 ูุฑุงุช) ๐ก๏ธ",
  "ุจุณู ุงููู ุงูุฐู ูุง ูุถุฑ ูุน ุงุณูู ุดูุก ูู ุงูุฃุฑุถ ููุง ูู ุงูุณูุงุก ููู ุงูุณููุน ุงูุนููู (3 ูุฑุงุช) โจ",
  "ุฃุนูุฐ ุจูููุงุช ุงููู ุงูุชุงูุงุช ูู ุดุฑ ูุง ุฎูู (3 ูุฑุงุช) ๐๏ธ",
  "ุงูููู ุฅูู ุฃุตุจุญุช ุฃุดูุฏู ูุฃุดูุฏ ุญููุฉ ุนุฑุดู ูููุงุฆูุชู ูุฌููุน ุฎููู ุฃูู ุฃูุช ุงููู ูุง ุฅูู ุฅูุง ุฃูุช ูุญุฏู ูุง ุดุฑูู ูู ูุฃู ูุญูุฏูุง ุนุจุฏู ูุฑุณููู (4 ูุฑุงุช) ๐ฟ",
  "ุณุจุญุงู ุงููู ูุจุญูุฏู (100 ูุฑุฉ) ๐",
  "ูุง ุฅูู ุฅูุง ุงููู ูุญุฏู ูุง ุดุฑูู ููุ ูู ุงูููู ููู ุงูุญูุฏ ููู ุนูู ูู ุดูุก ูุฏูุฑ (100 ูุฑุฉ) ๐",
  "ุฃุณุชุบูุฑ ุงููู ูุฃุชูุจ ุฅููู (100 ูุฑุฉ) ๐ง",
  "ุงูููู ุตู ูุณูู ุนูู ูุจููุง ูุญูุฏ (10 ูุฑุงุช ุฃู ุฃูุซุฑ) ๏ทบ",
];
static List<String> azkarEveningList = [
  "ุฃูุณููุง ูุฃูุณู ุงูููู ูููุ ูุงูุญูุฏ ูููุ ูุง ุฅูู ุฅูุง ุงููู ูุญุฏู ูุง ุดุฑูู ููุ ูู ุงูููู ููู ุงูุญูุฏ ููู ุนูู ูู ุดูุก ูุฏูุฑ ๐",
  "ุงูููู ุฅูู ุฃุณุฃูู ุฎูุฑ ูุฐู ุงููููุฉ: ูุชุญูุงุ ููุตุฑูุงุ ูููุฑูุงุ ูุจุฑูุชูุงุ ููุฏุงูุงุ ูุฃุนูุฐ ุจู ูู ุดุฑ ูุง ูููุง ูุดุฑ ูุง ุจุนุฏูุง ๐คฒ",
  "ุฃูุณููุง ุนูู ูุทุฑุฉ ุงูุฅุณูุงูุ ูุนูู ูููุฉ ุงูุฅุฎูุงุตุ ูุนูู ุฏูู ูุจููุง ูุญูุฏ ๏ทบุ ูุนูู ููุฉ ุฃุจููุง ุฅุจุฑุงููู ุญููููุง ูุณูููุง ููุง ูุงู ูู ุงููุดุฑููู ๐",
  "ุฑุถูุช ุจุงููู ุฑุจูุงุ ูุจุงูุฅุณูุงู ุฏูููุงุ ูุจูุญูุฏ ๏ทบ ูุจููุง ูุฑุณูููุง ๐ฟ",
  "ุงูููู ูุง ุฃูุณู ุจู ูู ูุนูุฉ ุฃู ุจุฃุญุฏ ูู ุฎููู ูููู ูุญุฏู ูุง ุดุฑูู ููุ ููู ุงูุญูุฏ ููู ุงูุดูุฑ ๐ธ",
  "ุงูููู ุจู ุฃูุณููุงุ ูุจู ุฃุตุจุญูุงุ ูุจู ูุญูุงุ ูุจู ูููุชุ ูุฅููู ุงููุตูุฑ ๐",
  "ุญุณุจู ุงููู ูุง ุฅูู ุฅูุง ูู ุนููู ุชูููุช ููู ุฑุจ ุงูุนุฑุด ุงูุนุธูู (7 ูุฑุงุช) ๐ก๏ธ",
  "ุจุณู ุงููู ุงูุฐู ูุง ูุถุฑ ูุน ุงุณูู ุดูุก ูู ุงูุฃุฑุถ ููุง ูู ุงูุณูุงุก ููู ุงูุณููุน ุงูุนููู (3 ูุฑุงุช) โจ",
  "ุฃุนูุฐ ุจูููุงุช ุงููู ุงูุชุงูุงุช ูู ุดุฑ ูุง ุฎูู (3 ูุฑุงุช) ๐๏ธ",
  "ุงูููู ุฅูู ุฃูุณูุช ุฃุดูุฏู ูุฃุดูุฏ ุญููุฉ ุนุฑุดู ูููุงุฆูุชู ูุฌููุน ุฎููู ุฃูู ุฃูุช ุงููู ูุง ุฅูู ุฅูุง ุฃูุช ูุญุฏู ูุง ุดุฑูู ูู ูุฃู ูุญูุฏูุง ุนุจุฏู ูุฑุณููู (4 ูุฑุงุช) ๐",
  "ุณุจุญุงู ุงููู ูุจุญูุฏู (100 ูุฑุฉ) ๐",
  "ูุง ุฅูู ุฅูุง ุงููู ูุญุฏู ูุง ุดุฑูู ููุ ูู ุงูููู ููู ุงูุญูุฏ ููู ุนูู ูู ุดูุก ูุฏูุฑ (100 ูุฑุฉ) ๐",
  "ุฃุณุชุบูุฑ ุงููู ูุฃุชูุจ ุฅููู (100 ูุฑุฉ) ๐ง",
  "ุงูููู ุตู ูุณูู ุนูู ูุจููุง ูุญูุฏ (10 ูุฑุงุช ุฃู ุฃูุซุฑ) ๏ทบ",
];

  static Future showNotification(DateTime start,DateTime end,Duration interval,List azkarList,int baseId) async {

    const NotificationDetails android = NotificationDetails(
      android: AndroidNotificationDetails(
        "channelId",
        "channelName",
        importance: Importance.high,
        priority: Priority.high,
      ),
    );
    tz.initializeTimeZones();
   tz.TZDateTime scheduledTime= tz.TZDateTime.from(start,tz.local);
    for (var i = 0; i< azkarList.length ;i++) {
  await flutterLocalNotificationsPlugin.zonedSchedule(
    baseId+i,
    ' ุฃุฐูุงุฑ ุงูุตุจุงุญ ูุงููุณุงุก',
    azkarList[i],
  
   // tz.TZDateTime.now(tz.local).add(const Duration(seconds: 5)),
  scheduledTime,
    android,
    matchDateTimeComponents: DateTimeComponents.time,
  
    androidScheduleMode: AndroidScheduleMode.exactAllowWhileIdle,
  );
    // ูุฒูุฏ ุงูููุช ุจุงููุงุตู ุงููู ุญุฏุฏู ุงูููุฒุฑ
    scheduledTime = scheduledTime.add(interval);
}
  }

 static void cancleAllNotification(int ids) async {
for(int i=ids+100;i<200+ids;i++){
      await flutterLocalNotificationsPlugin.cancel(i);
}
  }

  static Future<void> notification({
    required String title,
    required String body,
    required int id,
    required DateTime time,
  }) async {
        tz.initializeTimeZones();
    final tzTime = tz.TZDateTime.from(time, tz.local);
    const NotificationDetails android = NotificationDetails(
      android: AndroidNotificationDetails(
        "channelId",
        "channelName",
        importance: Importance.high,
        priority: Priority.high,
      ),
    );

    await flutterLocalNotificationsPlugin.zonedSchedule(
      id,
      title,
      body,

      tzTime,

      android,
      matchDateTimeComponents: DateTimeComponents.time,

      androidScheduleMode: AndroidScheduleMode.exactAllowWhileIdle,
    );
  }

  // This will be called daily by AlarmManager
  @pragma('vm:entry-point')
  static Future<void> runDailyAzkarTask() async {
    tz.initializeTimeZones();
  // ููู ุฌุฏูุง ุฅุนุงุฏุฉ ุงูุชููุฆุฉ ุฏุงุฎู isolate
  await NotificationServices.init();
    // Get location
    final position = await Geolocator.getCurrentPosition(
      desiredAccuracy: LocationAccuracy.high,
    );

    final coordinates = Coordinates(position.latitude, position.longitude);
    final params = CalculationMethod.egyptian.getParameters();
    final prayerTimes = PrayerTimes.today(coordinates, params);

    // Schedule Fajr or Sunrise for Azkar Al-Sabah
final now = DateTime.now();
final testTime = now.add(Duration(minutes: 1));

await notification(
  id: 1,
  title: ' ุฃุฐูุงุฑ ุงูุตุจุงุญ ูุงููุณุงุก' ,
  body: 'ุงุจุฏุฃ ูููู ุจุฐูุฑ ุงููู ๐',
  time:     tz.TZDateTime.now(tz.local).add(const Duration(seconds: 5)),
);


    // // Schedule Asr for Azkar Al-Masa
    // await notification(
    //   id: 2,
    //   title: '๐ ุฃุฐูุงุฑ ุงููุณุงุก',
    //   body: 'ูุง ุชูุณู ุฃุฐูุงุฑ ุงููุณุงุก ๐',
    //   time: prayerTimes.asr,
    // );
  }
}
